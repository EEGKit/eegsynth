[general]
delay=0.05
debug=2

[redis]
hostname=localhost
port=6379

<<<<<<< HEAD
=======
[trigger]
t1=launchcontrol.note041
t2=launchcontrol.note042

[conditional]
; the execution of triggers can be made conditional on a Redis value
t1=1
t2=1

>>>>>>> 71c0d3df8c6df126a86dc2ac9929dc17977a9f1c
[initial]
; here you can specify the initial values of some control values
launchcontrol.note041.counter=0
launchcontrol.note042.counter=0

<<<<<<< HEAD
[trigger]
t1=launchcontrol.note041
t2=launchcontrol.note042

[input]
; the keys here can have an arbitrary name, but should map those in the output section
; the keys must be lower-case. values should not contain an equation, only one-to-one mappings
=======
[input]
; the keys here can have an arbitrary name, but should map those in the output section
; the keys must be lower-case, start with a letter, should not contain an equation themselves
>>>>>>> 71c0d3df8c6df126a86dc2ac9929dc17977a9f1c
x1=launchcontrol.note041.counter
x2=launchcontrol.note042.counter
x3=launchcontrol.control077
x4=launchcontrol.control078

<<<<<<< HEAD
; for each trigger one or multiple computations have to be specified
=======
[output]
; after completion of the computation, the trigger is resent with this prefix
prefix=processed


; one or multiple equations is specified for each trigger
>>>>>>> 71c0d3df8c6df126a86dc2ac9929dc17977a9f1c
; besides +, -, /, *, the equations also support log, log2, log10, exp, power, sqrt, mean, median, var, std, mod from numpy
; and compress, limit, rescale, normalizerange, normalizestandard from EEGsynth

[t1]
launchcontrol.note041.counter=x1+1    ; increment with one

[t2]
launchcontrol.note042.counter=x2+x3   ; increment with the value of a slider
<<<<<<< HEAD

[output]
; after completion of the computation, the trigger is resent with this prefix
prefix=processed
=======
>>>>>>> 71c0d3df8c6df126a86dc2ac9929dc17977a9f1c
